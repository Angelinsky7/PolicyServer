@model ScopesViewModel

<script>
	function listController() {
		var checkboxes = document.querySelectorAll('input.js-list-check-box');

		return {
			selectedRows: [],
			checkTick(src) {
				var checkedCount = document.querySelectorAll('input.js-list-check-box:checked').length;
				this.$refs.checkAll.checked = checkedCount === checkboxes.length;
				this.$refs.checkAll.indeterminate = checkedCount > 0 && checkedCount < checkboxes.length;
				src.checked ? this.selectedRows.push(src) : this.selectedRows.remove(src);
			},
			checkAll(ref) {
				this.selectedRows = [];
				for (var i = 0; i < checkboxes.length; i++) {
					checkboxes[i].checked = ref.checked;
					ref.checked ? this.selectedRows.push(checkboxes[i].dataset.rowId) : this.selectedRows.remove(checkboxes[i].dataset.rowId);
				}
			},
		};
	}

	//$event.target.checked ? selected.push('scope.Id') : selected.remove('scope.Id')
</script>

<div class="flex flex-col m-2" x-data="listController()">
	<header class="flex">
		<h2 class="text-xl font-semibold text-gray-800">Scopes</h2>
		<span class="flex-auto"></span>
		<a asp-action="Create" class="px-4 py-2 rounded-md bg-blue-800 text-white shadow-lg focus:outline-none focus:text-white focus:bg-gray-700 hover:bg-blue-600 transition duration-150 ease-in-out">
			Add scope
		</a>
	</header>

	<hr class="mt-2 mb-2" />

	<div class="flex items-center">
		<button href="#create" x-bind:disabled="selectedRows.length === 0" class="px-4 py-2 rounded-md bg-red-800 disabled:bg-gray-500 text-white shadow-lg focus:outline-none focus:text-white focus:bg-gray-700 hover:bg-red-600 transition duration-150 ease-in-out">
			Remove scope
		</button>
		<template x-if="selectedRows.length > 0">
			<span class="ml-2" x-text="`${selectedRows.length} scope${selectedRows.length > 1 ? 's' : ''}`"></span>
		</template>
		<span class="flex-auto"></span>
		<form>
			<div class="relative">
				<input class="w-full pl-10 pr-4 py-2 rounded-lg shadow focus:outline-none focus:shadow-outline text-gray-600 font-medium" type="text" name="SearchString" value="@Model.SearchString" placeholder="Search" />
				<div class="absolute top-0 left-0 inline-flex items-center p-2">
					<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-400" viewBox="0 0 24 24"
						 stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round"
						 stroke-linejoin="round">
						<rect x="0" y="0" width="24" height="24" stroke="none"></rect>
						<circle cx="10" cy="10" r="7" />
						<line x1="21" y1="21" x2="15" y2="15" />
					</svg>
				</div>
			</div>
		</form>
	</div>

	<div class="mt-2 border shadow-2xl">
		<table class="min-w-full">
			<thead>
				<tr>
					<th class="w-4 px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
						<div class="bg-white border-2 rounded border-gray-400 w-5 h-5 flex flex-shrink-0 justify-center items-center mr-2 focus-within:border-blue-500">
							<input x-ref="checkAll" type="checkbox" class="opacity-0 absolute" x-on:input="checkAll($event.target)">
							<svg class="fill-current hidden w-3 h-3 text-green-500 pointer-events-none" viewBox="0 0 20 20"><path d="M0 11l2-2 5 5L18 3l2 2L7 18z" /></svg>
							<svg class="indeterminate fill-current hidden w-3 h-3 text-green-500 pointer-events-none" viewBox="0 0 20 20"><path d="M2,9 18,9 18,11 2,11" /></svg>
						</div>
					</th>
					<th class="px-2 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
						<div class="flex items-center">
							@Html.ActionLink("Name", "Index", new ListViewModel(Model) { SortOrder = String.IsNullOrEmpty(Model.SortOrder) ? "name_desc" : "" }, new { @class = (Model.SortOrder == "name_desc" ? "font-semibold" : "normal") })
							@if (Model.SortOrder == "name_desc") {
								<svg class="ml-2 h-3 w-3">
									<use xlink:href="#arrow-down"></use>
								</svg>
							}
						</div>
					</th>
					<th class="w-4 px-6 py-3 border-b border-gray-200 bg-gray-50"></th>
				</tr>
			</thead>
			<tbody class="bg-white">
				@foreach (var scope in Model.Scopes) {
					<tr>
						<td class="px-6 py-4 whitespace-no-wrap border-b border-gray-200">
							<div class="bg-white border-2 rounded border-gray-400 w-5 h-5 flex flex-shrink-0 justify-center items-center mr-2 focus-within:border-blue-500">
								<input type="checkbox" data-row-id="@scope.Id" class="js-list-check-box opacity-0 absolute" x-on:input="checkTick($event.target)">
								<svg class="fill-current hidden w-3 h-3 text-green-500 pointer-events-none" viewBox="0 0 20 20"><path d="M0 11l2-2 5 5L18 3l2 2L7 18z" /></svg>
							</div>
						</td>
						<td class="flex items-center px-2 py-4 whitespace-no-wrap border-b border-gray-200">
							@if (!String.IsNullOrEmpty(scope.IconUri?.ToString())) {
								<div class="flex-shrink-0 mr-4">
									<img class="h-10 w-10 rounded-full" src="@scope.IconUri" />
								</div>
							}
							<div>
								<div class="text-sm leading-5 font-medium text-gray-900">@scope.Name</div>
								<div class="text-sm leading-5 text-gray-500">@scope.DisplayName</div>
							</div>
						</td>
						<td class="px-6 py-4 whitespace-no-wrap border-b border-gray-200">
							<div class="relative" x-data="{dropdownIsOpen: false}" x-on:click.away="dropdownIsOpen = false">
								<button class="p-2 hover:bg-blue-600" x-on:click="dropdownIsOpen = !dropdownIsOpen">
									<svg class="h-4 w-4">
										<use xlink:href="#dots-horizontal-triple"></use>
									</svg>
								</button>
								<div x-show="dropdownIsOpen" class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg z-10">
									<div class="py-1 rounded-md bg-white shadow-xs" role="menu" aria-orientation="vertical" aria-labelledby="user-menu">
										<a asp-action="Edit" asp-route-id="@scope.Id"
										   class="block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out flex items-center" role="menuitem">
											<span>Edit</span>
											<span class="flex-auto"></span>
											<svg class="h-4 w-4">
												<use xlink:href="#edit-pencil"></use>
											</svg>
										</a>
										<a asp-action="Delete" asp-route-id="@scope.Id" class="block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out flex items-center" role="menuitem">
											<span>Delete</span>
											<span class="flex-auto"></span>
											<svg class="fill-current text-red-600 h-4 w-4">
												<use xlink:href="#trash"></use>
											</svg>
										</a>
									</div>
								</div>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>
